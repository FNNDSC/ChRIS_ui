/* tslint:disable */
/* eslint-disable */
/**
 * pfdcm
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BodyPACSobjPortUpdateApiV1PACSservicePortPost,
  HTTPValidationError,
  PACSdbPutModel,
  PACSdbReturnModel,
} from '../models/index';
import {
    BodyPACSobjPortUpdateApiV1PACSservicePortPostFromJSON,
    BodyPACSobjPortUpdateApiV1PACSservicePortPostToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    PACSdbPutModelFromJSON,
    PACSdbPutModelToJSON,
    PACSdbReturnModelFromJSON,
    PACSdbReturnModelToJSON,
} from '../models/index';

export interface PACSobjPortUpdateApiV1PACSservicePortPostRequest {
    bodyPACSobjPortUpdateApiV1PACSservicePortPost: BodyPACSobjPortUpdateApiV1PACSservicePortPost;
}

export interface PacsSetupGetApiV1PACSservicePACSobjNameGetRequest {
    pACSobjName: string;
}

export interface PacsSetupPutApiV1PACSservicePACSobjNamePutRequest {
    pACSobjName: string;
    pACSdbPutModel: PACSdbPutModel;
}

/**
 *
 */
export class PACSSetupServicesApi extends runtime.BaseAPI {

    /**
     * Update the `server_port` of a given __objToUpdate__. This method is more exemplar than actually useful.  Parameters ---------- - `objToUpdate`:    name of the internal PACS object to update - `newPort`:        port value string to re-assign in the internal object  Return ------ - updated model of the `objToUpdate`
     *      POST a change to the listener `port` of the PACS `objToUpdate`
     */
    async pACSobjPortUpdateApiV1PACSservicePortPostRaw(requestParameters: PACSobjPortUpdateApiV1PACSservicePortPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PACSdbReturnModel>> {
        if (requestParameters['bodyPACSobjPortUpdateApiV1PACSservicePortPost'] == null) {
            throw new runtime.RequiredError(
                'bodyPACSobjPortUpdateApiV1PACSservicePortPost',
                'Required parameter "bodyPACSobjPortUpdateApiV1PACSservicePortPost" was null or undefined when calling pACSobjPortUpdateApiV1PACSservicePortPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/PACSservice/port/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: BodyPACSobjPortUpdateApiV1PACSservicePortPostToJSON(requestParameters['bodyPACSobjPortUpdateApiV1PACSservicePortPost']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PACSdbReturnModelFromJSON(jsonValue));
    }

    /**
     * Update the `server_port` of a given __objToUpdate__. This method is more exemplar than actually useful.  Parameters ---------- - `objToUpdate`:    name of the internal PACS object to update - `newPort`:        port value string to re-assign in the internal object  Return ------ - updated model of the `objToUpdate`
     *      POST a change to the listener `port` of the PACS `objToUpdate`
     */
    async pACSobjPortUpdateApiV1PACSservicePortPost(requestParameters: PACSobjPortUpdateApiV1PACSservicePortPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PACSdbReturnModel> {
        const response = await this.pACSobjPortUpdateApiV1PACSservicePortPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * GET the setup info pertinent to a `pacsSetup`
     * GET the information for a given PACS
     */
    async pacsSetupGetApiV1PACSservicePACSobjNameGetRaw(requestParameters: PacsSetupGetApiV1PACSservicePACSobjNameGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PACSdbReturnModel>> {
        if (requestParameters['pACSobjName'] == null) {
            throw new runtime.RequiredError(
                'pACSobjName',
                'Required parameter "pACSobjName" was null or undefined when calling pacsSetupGetApiV1PACSservicePACSobjNameGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/PACSservice/{PACSobjName}/`.replace(`{${"PACSobjName"}}`, encodeURIComponent(String(requestParameters['pACSobjName']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PACSdbReturnModelFromJSON(jsonValue));
    }

    /**
     * GET the setup info pertinent to a `pacsSetup`
     * GET the information for a given PACS
     */
    async pacsSetupGetApiV1PACSservicePACSobjNameGet(requestParameters: PacsSetupGetApiV1PACSservicePACSobjNameGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PACSdbReturnModel> {
        const response = await this.pacsSetupGetApiV1PACSservicePACSobjNameGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * PUT an entire object. If the object already exists, overwrite. If it does not exist, append to the space of available objects.  Note that overwriting an existing object will replace ALL the `info` fields, thus leaving a default of `\"string\"` will literally put the text `string` for a specific field.  Parameters ----------  - `PACSobjName`     : internal name of (new) object - `PACSsetupData`   : new values for object internals
     * PUT information to a (possibly new) PACS object
     */
    async pacsSetupPutApiV1PACSservicePACSobjNamePutRaw(requestParameters: PacsSetupPutApiV1PACSservicePACSobjNamePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PACSdbReturnModel>> {
        if (requestParameters['pACSobjName'] == null) {
            throw new runtime.RequiredError(
                'pACSobjName',
                'Required parameter "pACSobjName" was null or undefined when calling pacsSetupPutApiV1PACSservicePACSobjNamePut().'
            );
        }

        if (requestParameters['pACSdbPutModel'] == null) {
            throw new runtime.RequiredError(
                'pACSdbPutModel',
                'Required parameter "pACSdbPutModel" was null or undefined when calling pacsSetupPutApiV1PACSservicePACSobjNamePut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/PACSservice/{PACSobjName}/`.replace(`{${"PACSobjName"}}`, encodeURIComponent(String(requestParameters['pACSobjName']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: PACSdbPutModelToJSON(requestParameters['pACSdbPutModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PACSdbReturnModelFromJSON(jsonValue));
    }

    /**
     * PUT an entire object. If the object already exists, overwrite. If it does not exist, append to the space of available objects.  Note that overwriting an existing object will replace ALL the `info` fields, thus leaving a default of `\"string\"` will literally put the text `string` for a specific field.  Parameters ----------  - `PACSobjName`     : internal name of (new) object - `PACSsetupData`   : new values for object internals
     * PUT information to a (possibly new) PACS object
     */
    async pacsSetupPutApiV1PACSservicePACSobjNamePut(requestParameters: PacsSetupPutApiV1PACSservicePACSobjNamePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PACSdbReturnModel> {
        const response = await this.pacsSetupPutApiV1PACSservicePACSobjNamePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * GET the list of configured PACS services
     * GET the list of configured PACS services
     */
    async serviceListGetApiV1PACSserviceListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<any>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/PACSservice/list/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * GET the list of configured PACS services
     * GET the list of configured PACS services
     */
    async serviceListGetApiV1PACSserviceListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<any>> {
        const response = await this.serviceListGetApiV1PACSserviceListGetRaw(initOverrides);
        return await response.value();
    }

}
